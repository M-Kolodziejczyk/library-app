[{"/home/mk/Pulpit/DEV/library-app/src/index.js":"1","/home/mk/Pulpit/DEV/library-app/src/reportWebVitals.js":"2","/home/mk/Pulpit/DEV/library-app/src/pages/HomePage/HomePage.js":"3","/home/mk/Pulpit/DEV/library-app/src/App.js":"4","/home/mk/Pulpit/DEV/library-app/src/components/Header.js":"5","/home/mk/Pulpit/DEV/library-app/src/pages/SigninPage/SigninPage.js":"6","/home/mk/Pulpit/DEV/library-app/src/aws-exports.js":"7","/home/mk/Pulpit/DEV/library-app/src/context/types.js":"8","/home/mk/Pulpit/DEV/library-app/src/components/Signup/Signup.js":"9","/home/mk/Pulpit/DEV/library-app/src/context/auth/authReducer.js":"10","/home/mk/Pulpit/DEV/library-app/src/context/auth/AuthState.js":"11","/home/mk/Pulpit/DEV/library-app/src/pages/SignupPage/SignupPage.js":"12","/home/mk/Pulpit/DEV/library-app/src/pages/BooksPage/BooksPage.js":"13","/home/mk/Pulpit/DEV/library-app/src/pages/Welcome/Welcome.js":"14","/home/mk/Pulpit/DEV/library-app/src/pages/ConfirmPage/ConfirmPage.js":"15","/home/mk/Pulpit/DEV/library-app/src/pages/ResendcodePage/ResendcodePage.js":"16","/home/mk/Pulpit/DEV/library-app/src/pages/ForgotPasswordPage/ForgotPasswordPage.js":"17","/home/mk/Pulpit/DEV/library-app/src/pages/NewPasswordPage/NewPasswordPage.js":"18","/home/mk/Pulpit/DEV/library-app/src/pages/UserPage/UserPage.js":"19","/home/mk/Pulpit/DEV/library-app/src/pages/UserPage/componets/MyDetails.js":"20","/home/mk/Pulpit/DEV/library-app/src/components/routing/PrivateRoute.js":"21","/home/mk/Pulpit/DEV/library-app/src/pages/UserPage/componets/AddBook.js":"22","/home/mk/Pulpit/DEV/library-app/src/pages/UserPage/componets/AddAuthor.js":"23","/home/mk/Pulpit/DEV/library-app/src/context/book/bookReducer.js":"24","/home/mk/Pulpit/DEV/library-app/src/graphql/mutations.js":"25","/home/mk/Pulpit/DEV/library-app/src/context/book/BookState.js":"26","/home/mk/Pulpit/DEV/library-app/src/graphql/queries.js":"27","/home/mk/Pulpit/DEV/library-app/src/pages/BooksPage/components/Book.js":"28","/home/mk/Pulpit/DEV/library-app/src/pages/BookPage/BookPage.js":"29","/home/mk/Pulpit/DEV/library-app/src/api/mutations.js":"30","/home/mk/Pulpit/DEV/library-app/src/api/queries.js":"31","/home/mk/Pulpit/DEV/library-app/src/pages/AuthorsPage/AuthorsPage.js":"32","/home/mk/Pulpit/DEV/library-app/src/pages/AuthorsPage/components/Author.js":"33","/home/mk/Pulpit/DEV/library-app/src/pages/AuthorPage/AuthorPage.js":"34","/home/mk/Pulpit/DEV/library-app/src/pages/AuthorPage/components/AuthorBook.js":"35","/home/mk/Pulpit/DEV/library-app/src/pages/BasketPage/BasketPage.js":"36","/home/mk/Pulpit/DEV/library-app/src/pages/BasketPage/components/BasketPageBook.js":"37","/home/mk/Pulpit/DEV/library-app/src/pages/UserPage/componets/MyBooks.js":"38","/home/mk/Pulpit/DEV/library-app/src/components/Spinner/Spinner.js":"39","/home/mk/Pulpit/DEV/library-app/src/components/Footer/Footer.js":"40","/home/mk/Pulpit/DEV/library-app/src/pages/HomePage/components/HomePageBook.js":"41"},{"size":712,"mtime":1612101264439,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":1608114722962,"results":"44","hashOfConfig":"43"},{"size":1593,"mtime":1614508213417,"results":"45","hashOfConfig":"43"},{"size":2880,"mtime":1614461016232,"results":"46","hashOfConfig":"43"},{"size":3807,"mtime":1614462367790,"results":"47","hashOfConfig":"43"},{"size":4339,"mtime":1614336948057,"results":"48","hashOfConfig":"43"},{"size":913,"mtime":1614172869966,"results":"49","hashOfConfig":"43"},{"size":2332,"mtime":1614188004035,"results":"50","hashOfConfig":"43"},{"size":982,"mtime":1609508897759,"results":"51","hashOfConfig":"43"},{"size":3610,"mtime":1614343027478,"results":"52","hashOfConfig":"43"},{"size":5495,"mtime":1614343015154,"results":"53","hashOfConfig":"43"},{"size":6562,"mtime":1614335728787,"results":"54","hashOfConfig":"43"},{"size":2681,"mtime":1613474402036,"results":"55","hashOfConfig":"43"},{"size":240,"mtime":1610472499591,"results":"56","hashOfConfig":"43"},{"size":4053,"mtime":1614341963824,"results":"57","hashOfConfig":"43"},{"size":3193,"mtime":1614342548104,"results":"58","hashOfConfig":"43"},{"size":3103,"mtime":1614337111720,"results":"59","hashOfConfig":"43"},{"size":4891,"mtime":1614341528721,"results":"60","hashOfConfig":"43"},{"size":5367,"mtime":1614343255881,"results":"61","hashOfConfig":"43"},{"size":6856,"mtime":1614343302036,"results":"62","hashOfConfig":"43"},{"size":498,"mtime":1611083119613,"results":"63","hashOfConfig":"43"},{"size":13106,"mtime":1614366201094,"results":"64","hashOfConfig":"43"},{"size":5634,"mtime":1614365777194,"results":"65","hashOfConfig":"43"},{"size":3548,"mtime":1614366095016,"results":"66","hashOfConfig":"43"},{"size":7024,"mtime":1612462425576,"results":"67","hashOfConfig":"43"},{"size":6609,"mtime":1614366406940,"results":"68","hashOfConfig":"43"},{"size":3073,"mtime":1612462884572,"results":"69","hashOfConfig":"43"},{"size":2577,"mtime":1613484995232,"results":"70","hashOfConfig":"43"},{"size":3418,"mtime":1613485968942,"results":"71","hashOfConfig":"43"},{"size":7464,"mtime":1614185439618,"results":"72","hashOfConfig":"43"},{"size":5869,"mtime":1614185362188,"results":"73","hashOfConfig":"43"},{"size":1394,"mtime":1613475407787,"results":"74","hashOfConfig":"43"},{"size":604,"mtime":1612729024837,"results":"75","hashOfConfig":"43"},{"size":1776,"mtime":1612821684269,"results":"76","hashOfConfig":"43"},{"size":1098,"mtime":1612820986504,"results":"77","hashOfConfig":"43"},{"size":2182,"mtime":1614345457974,"results":"78","hashOfConfig":"43"},{"size":1188,"mtime":1613561962280,"results":"79","hashOfConfig":"43"},{"size":1286,"mtime":1614193130059,"results":"80","hashOfConfig":"43"},{"size":332,"mtime":1614335002237,"results":"81","hashOfConfig":"43"},{"size":2390,"mtime":1614361789589,"results":"82","hashOfConfig":"43"},{"size":943,"mtime":1614507603271,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"k7rklr",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mk/Pulpit/DEV/library-app/src/index.js",[],["179","180"],"/home/mk/Pulpit/DEV/library-app/src/reportWebVitals.js",[],["181","182"],"/home/mk/Pulpit/DEV/library-app/src/pages/HomePage/HomePage.js",["183","184"],"/home/mk/Pulpit/DEV/library-app/src/App.js",[],"/home/mk/Pulpit/DEV/library-app/src/components/Header.js",["185"],"/home/mk/Pulpit/DEV/library-app/src/pages/SigninPage/SigninPage.js",[],["186","187"],"/home/mk/Pulpit/DEV/library-app/src/aws-exports.js",[],["188","189"],"/home/mk/Pulpit/DEV/library-app/src/context/types.js",[],"/home/mk/Pulpit/DEV/library-app/src/components/Signup/Signup.js",[],"/home/mk/Pulpit/DEV/library-app/src/context/auth/authReducer.js",["190"],"/home/mk/Pulpit/DEV/library-app/src/context/auth/AuthState.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/SignupPage/SignupPage.js",["191","192"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuthContext } from \"../../context/auth/AuthState\";\nimport Spinner from \"../../components/Spinner/Spinner\";\n\nimport \"./SignupPage.css\";\n\nconst SignupPage = () => {\n  const defaultState = {\n    given_name: \"\",\n    family_name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  };\n\n  const history = useHistory();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [values, setValues] = useState(defaultState);\n  const {\n    registerUser,\n    registerFail,\n    errorMessage,\n    registerSuccess,\n    user,\n    clearErrors,\n    loading\n  } = useAuthContext();\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const validate = values => {\n    let errors = {};\n    if (!values.given_name) {\n      errors.given_name = \"Name is required!\";\n    }\n    if (!values.family_name) {\n      errors.family_name = \"Last name is required!\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email address is required!\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      errors.email = \"Email address is invalid\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required!\";\n    } else if (values.password.length < 6) {\n      errors.password = \"Password needs to be more than 6 characters!\";\n    }\n\n    if (!values.password2) {\n      errors.password2 = \"Confirm password!\";\n    } else if (values.password !== values.password2) {\n      errors.password2 = \"Passwords do not match!\";\n    }\n    return errors;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    clearErrors();\n  }, []);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      registerUser(values);\n      setValues(defaultState);\n    }\n\n    // eslint-disable-next-line\n  }, [errors, isSubmitting]);\n\n  useEffect(() => {\n    if (registerSuccess && user) {\n      history.push(`/confirm/${user.username}`);\n    }\n  }, [registerSuccess]);\n\n  return (\n    <div className=\"signupPage\">\n      {loading && <Spinner />}\n      <h1>Signup Page</h1>\n      <div className=\"signupPage__container\">\n        <div className=\"singupPage__content\">\n          <h2>Create Account</h2>\n          <form className=\"singupPage__form\" onSubmit={handleSubmit}>\n            <div className=\"signupPage__formGroup\">\n              <input\n                className={`signupPage__formGroupInput \n                ${errors.given_name && \"form-control is-invalid\"}`}\n                type=\"text\"\n                id=\"given_name\"\n                name=\"given_name\"\n                value={values.given_name}\n                onChange={onChange}\n                placeholder=\"First Name\"\n              />\n              {errors.given_name && (\n                <label className=\"singupPage__formLabel\" htmlFor=\"given_name\">\n                  {errors.given_name}\n                </label>\n              )}\n            </div>\n            <div className=\"signupPage__formGroup\">\n              <input\n                className={`signupPage__formGroupInput \n                ${errors.family_name && \"form-control is-invalid\"}`}\n                type=\"text\"\n                id=\"family_name\"\n                name=\"family_name\"\n                value={values.family_name}\n                onChange={onChange}\n                placeholder=\"Last Name\"\n              />\n              {errors.family_name && (\n                <label className=\"singupPage__formLabel\" htmlFor=\"family_name\">\n                  {errors.family_name}\n                </label>\n              )}\n            </div>\n            <div className=\"signupPage__formGroup\">\n              <input\n                className={`signupPage__formGroupInput \n                ${errors.email && \"form-control is-invalid\"}`}\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={onChange}\n                placeholder=\"Your Email\"\n                autoComplete=\"username\"\n              />\n              {errors.email && (\n                <label className=\"singupPage__formLabel\" htmlFor=\"email\">\n                  {errors.email}\n                </label>\n              )}\n            </div>\n            <div className=\"signupPage__formGroup\">\n              <input\n                className={`signupPage__formGroupInput \n                ${errors.password && \"form-control is-invalid\"}`}\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                values={values.password}\n                onChange={onChange}\n                placeholder=\"Password\"\n                autoComplete=\"new-password\"\n              />\n              {errors.password && (\n                <label className=\"singupPage__formLabel\" htmlFor=\"password\">\n                  {errors.password}\n                </label>\n              )}\n            </div>\n            <div className=\"signupPage__formGroup\">\n              <input\n                className={`signupPage__formGroupInput \n                ${errors.password2 && \"form-control is-invalid\"}`}\n                type=\"password\"\n                id=\"password2\"\n                name=\"password2\"\n                values={values.password2}\n                onChange={onChange}\n                placeholder=\"Repeat your password\"\n                autoComplete=\"new-password\"\n              />\n              {errors.password2 && (\n                <label className=\"singupPage__formLabel\" htmlFor=\"password2\">\n                  {errors.password2}\n                </label>\n              )}\n            </div>\n            <div className=\"signupPage__formGroup\">\n              <input\n                type=\"submit\"\n                className=\"signupPage__formSubmit\"\n                placeholder=\"SUBMIT\"\n                name=\"submit\"\n              />\n              {registerFail && (\n                <label className=\"singupPage__formLabel\" htmlFor=\"submit\">\n                  {errorMessage}\n                </label>\n              )}\n            </div>\n          </form>\n          <p className=\"signupPage__login\">\n            Have already an account?{\" \"}\n            <Link to=\"/signin\" className=\"signupPage__link\">\n              Login Here\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupPage;\n","/home/mk/Pulpit/DEV/library-app/src/pages/BooksPage/BooksPage.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/Welcome/Welcome.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/ConfirmPage/ConfirmPage.js",["193"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuthContext } from \"../../context/auth/AuthState\";\nimport Spinner from \"../../components/Spinner/Spinner\";\n\nimport \"./ConfirmPage.css\";\n\nconst ConfirmPage = props => {\n  const defaultState = {\n    username: props.match.params.username,\n    code: \"\"\n  };\n  const [values, setValues] = useState(defaultState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    errorMessage,\n    confirmRegister,\n    confirmRegisterUser,\n    clearErrors,\n    loading\n  } = useAuthContext();\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const validate = values => {\n    let errors = {};\n\n    if (!values.username) {\n      errors.username = \"Email address is required!\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.username)) {\n      errors.username = \"Email address is invalid\";\n    }\n\n    if (!values.code) {\n      errors.code = \"Code is required!\";\n    }\n\n    return errors;\n  };\n\n  const handleConfirm = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      confirmRegisterUser(values);\n    }\n\n    // eslint-disable-next-line\n  }, [errors, isSubmitting]);\n\n  useEffect(() => {\n    clearErrors();\n  }, []);\n\n  return (\n    <div className=\"confirmPage\">\n      {loading && <Spinner />}\n      <h1>Confirm Page</h1>\n      <div className=\"confirmPage__container\">\n        <div className=\"confirmPage__content\">\n          <h2>Confirm Email</h2>\n          <form onSubmit={handleConfirm} className=\"confirmPage__form\">\n            <div className=\"confirmPage__formGroup\">\n              <input\n                className={`confirmPage__formGroupInput ${errors.username &&\n                  \"form-control is-invalid\"} `}\n                type=\"email\"\n                id=\"username\"\n                name=\"username\"\n                placeholder=\"Your Email\"\n                value={values.username}\n                onChange={onChange}\n              />\n              {errors.username && (\n                <label className=\"confirmPage__formLabel\" htmlFor=\"username\">\n                  {errors.username}\n                </label>\n              )}\n            </div>\n            <div className=\"confirmPage__formGroup\">\n              <input\n                className={`confirmPage__formGroupInput ${errors.code &&\n                  \"form-control is-invalid\"} `}\n                type=\"text\"\n                id=\"code\"\n                name=\"code\"\n                placeholder=\"Confirm Code\"\n                value={values.code}\n                onChange={onChange}\n                autoFocus\n              />\n              {errors.code && (\n                <label className=\"confirmPage__formLabel\" htmlFor=\"code\">\n                  {errors.code}\n                </label>\n              )}\n            </div>\n            <div className=\"confirmPage__formGroup\">\n              <input\n                type=\"submit\"\n                name=\"submit\"\n                placeholder=\"SUBMIT\"\n                className=\"confirmPage__formSubmit\"\n              />\n              {errorMessage && (\n                <label className=\"confirmPage__formLabel\" htmlFor=\"submit\">\n                  {errorMessage}\n                </label>\n              )}\n            </div>\n          </form>\n          {confirmRegister && (\n            <p className=\"confirmPage__registerSuccess\">\n              Cosnfirmation Succcess\n            </p>\n          )}\n          <div className=\"confirmPage__containerLinks\">\n            <Link to=\"/signin\" className=\"confirmPage__link\">\n              Go to Signin Page\n            </Link>\n            <Link to=\"/resendcode\" className=\"confirmPage__link\">\n              Go to Resend Code Page\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmPage;\n","/home/mk/Pulpit/DEV/library-app/src/pages/ResendcodePage/ResendcodePage.js",["194","195","196"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuthContext } from \"../../context/auth/AuthState\";\nimport Spinner from \"../../components/Spinner/Spinner\";\n\nimport \"./ResendcodePage.css\";\n\nconst ResendcodePage = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    resendCode,\n    errorMessage,\n    resendConfirmCode,\n    clearErrors,\n    loading\n  } = useAuthContext();\n\n  const onChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const validate = value => {\n    let errors = \"\";\n\n    if (!value) {\n      errors = \"Email address is required!\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n      errors = \"Email address is invalid\";\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(email));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (errors.length === 0 && isSubmitting) {\n      resendConfirmCode(email);\n    }\n  }, [errors, isSubmitting]);\n\n  useEffect(() => {\n    clearErrors();\n  }, []);\n\n  useEffect(() => {\n    if (resendCode) {\n      history.push(`/confirm/${email}`);\n    }\n  }, [resendCode]);\n\n  return (\n    <div className=\"resendcodePage\">\n      {loading && <Spinner />}\n      <h1>Resend Code</h1>\n      <div className=\"resendcodePage__container\">\n        <div className=\"resendcodePage__content\">\n          <h2>Resend confirm code</h2>\n          <form onSubmit={handleSubmit} className=\"resendcodePage__form\">\n            <div className=\"resendcodePage__formGroup\">\n              <input\n                className={`resendcodePage__formGroupInput ${errors &&\n                  \"form-control is-invalid\"} `}\n                type=\"email\"\n                id=\"username\"\n                name=\"username\"\n                placeholder=\"Your Email\"\n                value={email}\n                onChange={onChange}\n              />\n              {errors && (\n                <label className=\"resendcodePage__formLabel\" htmlFor=\"username\">\n                  {errors}\n                </label>\n              )}\n            </div>\n            <div className=\"resendcodePage__submitGroup\">\n              <Link\n                to={`/confirm/${email}`}\n                className=\"resendcodePage__submitGroupLink\"\n              >\n                Go to Confirm Page\n              </Link>\n              <input\n                type=\"submit\"\n                name=\"submit\"\n                placeholder=\"SUBMIT\"\n                className=\"resendcodePage__submitGroupSubmit\"\n              />\n            </div>\n            {errorMessage && (\n              <p className=\"resendcodePage__errorMessage\" htmlFor=\"submit\">\n                {errorMessage}\n              </p>\n            )}\n            {resendCode && (\n              <p className=\"resendcodePage__successMessage\" htmlFor=\"submit\">\n                Confirmation code was sent to: {email}\n              </p>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResendcodePage;\n","/home/mk/Pulpit/DEV/library-app/src/pages/ForgotPasswordPage/ForgotPasswordPage.js",["197","198","199"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuthContext } from \"../../context/auth/AuthState\";\nimport Spinner from \"../../components/Spinner/Spinner\";\n\nimport \"./ForgotPasswordPage.css\";\n\nconst ForgotPasswordPage = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    forgotPasswordSuccess,\n    errorMessage,\n    forgotPassword,\n    loading,\n    clearErrors\n  } = useAuthContext();\n\n  const onChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const validate = value => {\n    let errors = \"\";\n\n    if (!value) {\n      errors = \"Email address is required!\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n      errors = \"Email address is invalid\";\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(email));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (errors.length === 0 && isSubmitting) {\n      forgotPassword(email);\n    }\n  }, [errors, isSubmitting]);\n\n  useEffect(() => {\n    if (forgotPasswordSuccess) {\n      history.push(`/new-password/${email}`);\n    }\n  }, [forgotPasswordSuccess]);\n\n  useEffect(() => {\n    clearErrors();\n  }, []);\n\n  return (\n    <div className=\"forgotPasswordPage\">\n      {loading && <Spinner />}\n      <h1>Forgot Password</h1>\n      <div className=\"forgotPasswordPage__container\">\n        <div className=\"forgotPasswordPage__content\">\n          <h2>Forgot Password</h2>\n          <form onSubmit={handleSubmit} className=\"forgotPasswordPage__form\">\n            <div className=\"forgotPasswordPage__formGroup\">\n              <input\n                className={`forgotPasswordPage__formGroupInput ${errors &&\n                  \"form-control is-invalid\"} `}\n                type=\"email\"\n                id=\"username\"\n                name=\"username\"\n                placeholder=\"Your Email\"\n                value={email}\n                onChange={onChange}\n              />\n              {errors && (\n                <label\n                  className=\"forgotPasswordPage__formLabel\"\n                  htmlFor=\"username\"\n                >\n                  {errors}\n                </label>\n              )}\n            </div>\n            <div className=\"forgotPasswordPage__submitGroup\">\n              <Link\n                to={`/confirm/${email}`}\n                className=\"forgotPasswordPage__submitGroupLink\"\n              >\n                Go to Confirm Page\n              </Link>\n              <input\n                type=\"submit\"\n                name=\"submit\"\n                placeholder=\"SUBMIT\"\n                className=\"forgotPasswordPage__submitGroupSubmit\"\n              />\n            </div>\n            {errorMessage && (\n              <p className=\"forgotPasswordPage__errorMessage\" htmlFor=\"submit\">\n                {errorMessage}\n              </p>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPasswordPage;\n","/home/mk/Pulpit/DEV/library-app/src/pages/NewPasswordPage/NewPasswordPage.js",["200"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuthContext } from \"../../context/auth/AuthState\";\nimport Spinner from \"../../components/Spinner/Spinner\";\n\nimport \"./NewPasswordPage.css\";\n\nconst NewPasswordPage = props => {\n  const defaultState = {\n    username: props.match.params.username,\n    code: \"\",\n    newPassword: \"\"\n  };\n  const [values, setValues] = useState(defaultState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    errorMessage,\n    newPasswordSuccess,\n    newPassword,\n    loading,\n    clearErrors\n  } = useAuthContext();\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const validate = values => {\n    let errors = {};\n\n    if (!values.username) {\n      errors.username = \"Email address is required!\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.username)) {\n      errors.username = \"Email address is invalid\";\n    }\n\n    if (!values.code) {\n      errors.code = \"Code is required!\";\n    }\n\n    if (!values.newPassword) {\n      errors.newPassword = \"Password is required!\";\n    } else if (values.newPassword.length < 6) {\n      errors.newPassword = \"Password needs to be more than 6 characters!\";\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      newPassword(values);\n    }\n\n    // eslint-disable-next-line\n  }, [errors, isSubmitting]);\n\n  useEffect(() => {\n    clearErrors();\n  }, []);\n\n  return (\n    <div className=\"newPasswordPage\">\n      {loading && <Spinner />}\n      <h1>New Password Page</h1>\n      <div className=\"newPasswordPage__container\">\n        <div className=\"newPasswordPage__content\">\n          <h2>New Password</h2>\n          <form onSubmit={handleSubmit} className=\"newPasswordPage__form\">\n            <div className=\"newPasswordPage__formGroup\">\n              <input\n                className={`newPasswordPage__formGroupInput ${errors.username &&\n                  \"form-control is-invalid\"} `}\n                type=\"email\"\n                id=\"username\"\n                name=\"username\"\n                placeholder=\"Your Email\"\n                value={values.username}\n                onChange={onChange}\n              />\n              {errors.username && (\n                <label\n                  className=\"newPasswordPage__formLabel\"\n                  htmlFor=\"username\"\n                >\n                  {errors.username}\n                </label>\n              )}\n            </div>\n            <div className=\"newPasswordPage__formGroup\">\n              <input\n                className={`newPasswordPage__formGroupInput ${errors.code &&\n                  \"form-control is-invalid\"} `}\n                type=\"text\"\n                id=\"code\"\n                name=\"code\"\n                placeholder=\"Confirm Code\"\n                value={values.code}\n                onChange={onChange}\n                autoFocus\n              />\n              {errors.code && (\n                <label className=\"newPasswordPage__formLabel\" htmlFor=\"code\">\n                  {errors.code}\n                </label>\n              )}\n            </div>\n            <div className=\"newPasswordPage__formGroup\">\n              <input\n                className={`newPasswordPage__formGroupInput ${errors.code &&\n                  \"form-control is-invalid\"} `}\n                type=\"password\"\n                id=\"newPassword\"\n                name=\"newPassword\"\n                placeholder=\"New password\"\n                value={values.newPassword}\n                onChange={onChange}\n              />\n              {errors.newPassword && (\n                <label className=\"newPasswordPage__formLabel\" htmlFor=\"code\">\n                  {errors.newPassword}\n                </label>\n              )}\n            </div>\n            <div className=\"newPasswordPage__submitGroup\">\n              <Link to={`/signin`} className=\"newPasswordPage__submitGroupLink\">\n                Go to Signin Page\n              </Link>\n              <input\n                type=\"submit\"\n                name=\"submit\"\n                placeholder=\"SUBMIT\"\n                className=\"newPasswordPage__submitGroupSubmit\"\n              />\n            </div>\n            {errorMessage && (\n              <p className=\"newPasswordPage__errorMessage\" htmlFor=\"submit\">\n                {errorMessage}\n              </p>\n            )}\n            {newPasswordSuccess && (\n              <p className=\"newPasswordPage__successMessage\">\n                Change Password Success!\n              </p>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewPasswordPage;\n","/home/mk/Pulpit/DEV/library-app/src/pages/UserPage/UserPage.js",["201"],"import React, { useEffect } from \"react\";\nimport MyDetails from \"./componets/MyDetails\";\nimport AddBook from \"./componets/AddBook\";\nimport AddAuthor from \"./componets/AddAuthor\";\nimport MyBooks from \"./componets/MyBooks\";\nimport { useAuthContext } from \"../../context/auth/AuthState\";\nimport { useBookContext } from \"../../context/book/BookState\";\nimport \"./UserPage.css\";\n\nconst UserPage = () => {\n  const { group, user } = useAuthContext();\n  const { getUserOrders, orders } = useBookContext();\n\n  useEffect(() => {\n    if (user) {\n      getUserOrders(user.email);\n    }\n  }, [user]);\n\n  return (\n    <div className=\"userPage\">\n      <div className=\"userPage__container container-xl\">\n        <h1>User Page</h1>\n\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <ul className=\"nav nav-pills flex-column\" id=\"myTab\" role=\"tablist\">\n              <li className=\"nav-item\" role=\"presentation\">\n                <a\n                  className=\"userPage__navLink active\"\n                  id=\"myDetails-tab\"\n                  data-bs-toggle=\"pill\"\n                  href=\"#myDetails\"\n                  role=\"tab\"\n                  aria-controls=\"myDetails\"\n                  aria-selected=\"true\"\n                >\n                  My Details\n                </a>\n              </li>\n              <li className=\"nav-item\" role=\"presentation\">\n                <a\n                  className=\"userPage__navLink\"\n                  id=\"myBooks-tab\"\n                  data-bs-toggle=\"pill\"\n                  href=\"#myBooks\"\n                  role=\"tab\"\n                  aria-controls=\"myBooks\"\n                  aria-selected=\"false\"\n                >\n                  My Books\n                </a>\n              </li>\n              <li className=\"nav-item\" role=\"presentation\">\n                <a\n                  className=\"userPage__navLink\"\n                  id=\"settings-tab\"\n                  data-bs-toggle=\"pill\"\n                  href=\"#settings\"\n                  role=\"tab\"\n                  aria-controls=\"settings\"\n                  aria-selected=\"false\"\n                >\n                  Settings\n                </a>\n              </li>\n\n              {group && group.includes(\"Admin\") && (\n                <li className=\"nav-item\" role=\"presentation\">\n                  <a\n                    className=\"userPage__navLink\"\n                    id=\"addBook-tab\"\n                    data-bs-toggle=\"pill\"\n                    href=\"#addBook\"\n                    role=\"tab\"\n                    aria-controls=\"addBook\"\n                    aria-selected=\"false\"\n                  >\n                    Add Book\n                  </a>\n                </li>\n              )}\n              {group && group.includes(\"Admin\") && (\n                <li className=\"nav-item\" role=\"presentation\">\n                  <a\n                    className=\"userPage__navLink\"\n                    id=\"addAuthor-tab\"\n                    data-bs-toggle=\"pill\"\n                    href=\"#addAuthor\"\n                    role=\"tab\"\n                    aria-controls=\"addAuthor\"\n                    aria-selected=\"false\"\n                  >\n                    Add Author\n                  </a>\n                </li>\n              )}\n            </ul>\n          </div>\n          <div className=\"col-9 userPage__content\">\n            <div className=\"tab-content\">\n              <div\n                className=\"tab-pane fade show active\"\n                id=\"myDetails\"\n                role=\"tabpanel\"\n                aria-labelledby=\"myDetails-tab\"\n              >\n                <MyDetails />\n              </div>\n              <div\n                className=\"tab-pane fade\"\n                id=\"myBooks\"\n                role=\"tabpanel\"\n                aria-labelledby=\"myBooks-tab\"\n              >\n                <div className=\"userPage__myBooksHeader\">\n                  <p className=\"userPage__myBooksHeaderId\">ID:</p>\n                  <p className=\"userPage__myBooksHeaderDate\">Date:</p>\n                  <p className=\"userPage__myBooksHeaderStatus\">Status:</p>\n                </div>\n                {orders.length > 0 ? (\n                  orders.map((order, id) => (\n                    <MyBooks key={order.id} order={order} id={id} />\n                  ))\n                ) : (\n                  <p>No orders</p>\n                )}\n              </div>\n              <div\n                className=\"tab-pane fade\"\n                id=\"settings\"\n                role=\"tabpanel\"\n                aria-labelledby=\"settings-tab\"\n              >\n                <h2>Settings</h2>\n              </div>\n              {group && group.includes(\"Admin\") && (\n                <div\n                  className=\"tab-pane fade\"\n                  id=\"addBook\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"addBook-tab\"\n                >\n                  <AddBook />\n                </div>\n              )}\n              {group && group.includes(\"Admin\") && (\n                <div\n                  className=\"tab-pane fade\"\n                  id=\"addAuthor\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"addAuthor-tab\"\n                >\n                  <AddAuthor />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserPage;\n","/home/mk/Pulpit/DEV/library-app/src/pages/UserPage/componets/MyDetails.js",[],"/home/mk/Pulpit/DEV/library-app/src/components/routing/PrivateRoute.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/UserPage/componets/AddBook.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/UserPage/componets/AddAuthor.js",["202"],"/home/mk/Pulpit/DEV/library-app/src/context/book/bookReducer.js",[],"/home/mk/Pulpit/DEV/library-app/src/graphql/mutations.js",[],"/home/mk/Pulpit/DEV/library-app/src/context/book/BookState.js",[],"/home/mk/Pulpit/DEV/library-app/src/graphql/queries.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/BooksPage/components/Book.js",["203","204"],"import React, { useEffect, useState } from \"react\";\nimport { Storage } from \"aws-amplify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useBookContext } from \"../../../context/book/BookState\";\nimport \"./Book.css\";\n\nconst Book = ({ book }) => {\n  const history = useHistory();\n  const [img, setImg] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { addToBasket, basket } = useBookContext();\n\n  const getBookImg = async id => {\n    try {\n      setImg(await Storage.get(id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (img) {\n    book.link = img;\n  }\n\n  const handleClick = e => {\n    e.preventDefault();\n    history.push(`/author/${book.authorID}`);\n  };\n\n  const handleBasket = e => {\n    e.preventDefault();\n    if (basket.length === 0) {\n      addToBasket(book);\n    } else {\n      basket.map(e => {\n        if (e.id === book.id) {\n          setError(true);\n        }\n      });\n      setIsSubmitting(true);\n    }\n  };\n\n  useEffect(() => {\n    getBookImg(book.image.name);\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setError(false);\n    }, 2500);\n\n    return () => clearTimeout(timeout);\n  }, [error]);\n\n  useEffect(() => {\n    if (isSubmitting && !error) {\n      addToBasket(book);\n    } else {\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting]);\n\n  return (\n    <Link to={{ pathname: `/book/${book.id}`, book: book }} className=\"book\">\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <div className=\"book__img\">\n            <img src={img} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"col-8 d-flex flex-column justify-content-between\">\n          <p className=\"book__title\">{book.title}</p>\n          <p onClick={handleClick} className=\"book__author\">\n            {book.authorName}\n          </p>\n          <p className=\"book__category\">{book.category}</p>\n          <p className=\"book__totalPages\">\n            Total pages: {book.totalPages}\n            {error && (\n              <span className=\"book__basketError\">\n                Already added to basket!\n              </span>\n            )}\n          </p>\n        </div>\n        <div className=\"col-2 d-flex flex-column justify-content-between\">\n          <span className=\"book__status\">Available</span>\n\n          <button className=\"book__cartBtn\" onClick={handleBasket}>\n            Add to cart\n          </button>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Book;\n","/home/mk/Pulpit/DEV/library-app/src/pages/BookPage/BookPage.js",["205","206"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { useBookContext } from \"../../context/book/BookState\";\nimport { format } from \"date-fns\";\nimport \"./BookPage.css\";\n\nconst BookPage = props => {\n  const { book, getBook, addToBasket, basket } = useBookContext();\n  const [state, setState] = useState({});\n  const [error, setError] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  let { id } = useParams();\n\n  const handleBasket = e => {\n    e.preventDefault();\n    if (basket.length === 0) {\n      addToBasket(state);\n    } else {\n      basket.map(e => {\n        if (e.id === state.id) {\n          setError(true);\n        }\n      });\n      setIsSubmitting(true);\n    }\n  };\n\n  useEffect(() => {\n    if (props.location.book) {\n      setState(props.location.book);\n    } else if (book.id === id) {\n      setState(book);\n    } else {\n      getBook(id);\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (book.id === id) {\n      setState(book);\n    }\n\n    // eslint-disable-next-line\n  }, [book]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setError(false);\n    }, 2500);\n\n    return () => clearTimeout(timeout);\n  }, [error]);\n\n  useEffect(() => {\n    if (isSubmitting && !error) {\n      addToBasket(state);\n    } else {\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting]);\n\n  if (Object.keys(state).length === 0) {\n    return (\n      <div className=\"bookPage__container\">\n        <div className=\"bookPage__containerSpinner text-center\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"bookPage container-xl\">\n        <div className=\"bookPage__img\">\n          <img src={state.link} alt=\"\" />\n        </div>\n        <div className=\"bookPage__content\">\n          <div className=\"bookPage__contentHeader\">\n            <p className=\"bookPage__contentHeaderTitle\">{state.title}</p>\n            <span className=\"bookPage__contentHeaderStatus\">Available</span>\n          </div>\n          <Link\n            to={{ pathname: `/author/${state.authorID}` }}\n            className=\"bookPage__contentAuthor\"\n          >\n            {state.authorName}\n          </Link>\n          <p className=\"bookPage__contentPublisher\">{state.publisher}</p>\n          <p className=\"bookPage__contentCategory\">{state.category}</p>\n          <p className=\"bookPage__contentPublishedDate\">\n            {format(new Date(state.publishedDate), \"yyyy-MM-dd\")}\n          </p>\n          <p className=\"bookPage__contentLanguage\">\n            Language: {state.language}\n          </p>\n          <p className=\"bookPage__contentPages\">{state.totalPages} pages</p>\n          <p className=\"bookPage__contentDescription\">{state.description} </p>\n          {error ? (\n            <span className=\"bookPage__contentError\">\n              Already added to basket!\n            </span>\n          ) : (\n            <span className=\"bookPage__contentError hide\">\n              Already added to basket!\n            </span>\n          )}\n          <button onClick={handleBasket} className=\"bookPage__contentBtn\">\n            Add to cart\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default BookPage;\n","/home/mk/Pulpit/DEV/library-app/src/api/mutations.js",[],"/home/mk/Pulpit/DEV/library-app/src/api/queries.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/AuthorsPage/AuthorsPage.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/AuthorsPage/components/Author.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/AuthorPage/AuthorPage.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/AuthorPage/components/AuthorBook.js",["207"],"/home/mk/Pulpit/DEV/library-app/src/pages/BasketPage/BasketPage.js",["208"],"import React, { useEffect } from \"react\";\nimport \"./BasketPage.css\";\nimport { useBookContext } from \"../../context/book/BookState\";\nimport { useAuthContext } from \"../../context/auth/AuthState\";\nimport BasketBookPage from \"./components/BasketPageBook\";\n\nconst BasketPage = () => {\n  const { user } = useAuthContext();\n  const {\n    basket,\n    deleteFromBasket,\n    deleteBasket,\n    createOrder,\n    orderSuccess,\n    errorMessage,\n    clearForm\n  } = useBookContext();\n\n  const handleDelete = e => {\n    e.preventDefault();\n    deleteBasket();\n  };\n\n  const handleOrder = e => {\n    e.preventDefault();\n    if (user !== null && \"email\" in user && basket.length > 0) {\n      createOrder({\n        user: user.sub,\n        email: user.email,\n        cart: basket.map(book => ({ id: book.id, title: book.title }))\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (orderSuccess) {\n      deleteBasket();\n    }\n\n    // eslint-disable-next-line\n  }, [orderSuccess]);\n\n  useEffect(() => {\n    clearForm();\n  }, []);\n\n  return (\n    <div className=\"container basketPage\">\n      <div className=\"basketPage__header\">\n        <div className=\"basketPage__headerH1\">\n          <h1>Your Books:</h1>\n        </div>\n        {basket.length > 0 && (\n          <div className=\"basketPage__headerBtn\">\n            <button onClick={handleDelete}>Delete all books</button>\n          </div>\n        )}\n      </div>\n\n      {basket.length > 0 && (\n        <div className=\"basketPage__basketContent\">\n          {basket.map(e => (\n            <BasketBookPage\n              key={e.id}\n              book={e}\n              basket={basket}\n              deleteElement={deleteFromBasket}\n            />\n          ))}\n          <button onClick={handleOrder}>Order</button>\n        </div>\n      )}\n      {basket.length === 0 && !orderSuccess && (\n        <p className=\"basketPage__paragraph\">You didn't add any books</p>\n      )}\n      {basket.length === 0 && orderSuccess && (\n        <p className=\"basketPage__orderSuccess\">Order Success</p>\n      )}\n      {!orderSuccess && errorMessage && (\n        <p className=\"basketPage__orderFail\">{errorMessage}</p>\n      )}\n    </div>\n  );\n};\n\nexport default BasketPage;\n","/home/mk/Pulpit/DEV/library-app/src/pages/BasketPage/components/BasketPageBook.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/UserPage/componets/MyBooks.js",[],"/home/mk/Pulpit/DEV/library-app/src/components/Spinner/Spinner.js",[],"/home/mk/Pulpit/DEV/library-app/src/components/Footer/Footer.js",[],"/home/mk/Pulpit/DEV/library-app/src/pages/HomePage/components/HomePageBook.js",["209"],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"210","replacedBy":"214"},{"ruleId":"212","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"220","line":1,"column":27,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"221","severity":1,"message":"222","line":27,"column":6,"nodeType":"223","endLine":27,"endColumn":31,"suggestions":"224"},{"ruleId":"210","replacedBy":"225"},{"ruleId":"212","replacedBy":"226"},{"ruleId":"210","replacedBy":"227"},{"ruleId":"212","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":22,"column":1,"nodeType":"231","endLine":160,"endColumn":3},{"ruleId":"221","severity":1,"message":"232","line":76,"column":6,"nodeType":"223","endLine":76,"endColumn":8,"suggestions":"233"},{"ruleId":"221","severity":1,"message":"234","line":91,"column":6,"nodeType":"223","endLine":91,"endColumn":23,"suggestions":"235"},{"ruleId":"221","severity":1,"message":"232","line":64,"column":6,"nodeType":"223","endLine":64,"endColumn":8,"suggestions":"236"},{"ruleId":"221","severity":1,"message":"237","line":48,"column":6,"nodeType":"223","endLine":48,"endColumn":28,"suggestions":"238"},{"ruleId":"221","severity":1,"message":"232","line":52,"column":6,"nodeType":"223","endLine":52,"endColumn":8,"suggestions":"239"},{"ruleId":"221","severity":1,"message":"240","line":58,"column":6,"nodeType":"223","endLine":58,"endColumn":18,"suggestions":"241"},{"ruleId":"221","severity":1,"message":"242","line":47,"column":6,"nodeType":"223","endLine":47,"endColumn":28,"suggestions":"243"},{"ruleId":"221","severity":1,"message":"240","line":53,"column":6,"nodeType":"223","endLine":53,"endColumn":29,"suggestions":"244"},{"ruleId":"221","severity":1,"message":"232","line":57,"column":6,"nodeType":"223","endLine":57,"endColumn":8,"suggestions":"245"},{"ruleId":"221","severity":1,"message":"232","line":71,"column":6,"nodeType":"223","endLine":71,"endColumn":8,"suggestions":"246"},{"ruleId":"221","severity":1,"message":"247","line":18,"column":6,"nodeType":"223","endLine":18,"endColumn":12,"suggestions":"248"},{"ruleId":"221","severity":1,"message":"249","line":109,"column":6,"nodeType":"223","endLine":109,"endColumn":27,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":36,"column":20,"nodeType":"253","messageId":"254","endLine":36,"endColumn":22},{"ruleId":"221","severity":1,"message":"255","line":65,"column":6,"nodeType":"223","endLine":65,"endColumn":20,"suggestions":"256"},{"ruleId":"251","severity":1,"message":"252","line":20,"column":20,"nodeType":"253","messageId":"254","endLine":20,"endColumn":22},{"ruleId":"221","severity":1,"message":"257","line":63,"column":6,"nodeType":"223","endLine":63,"endColumn":20,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":33,"column":9,"nodeType":"261","endLine":33,"endColumn":43},{"ruleId":"221","severity":1,"message":"249","line":45,"column":6,"nodeType":"223","endLine":45,"endColumn":8,"suggestions":"262"},{"ruleId":"216","severity":1,"message":"263","line":3,"column":16,"nodeType":"218","messageId":"219","endLine":3,"endColumn":26},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],["264"],["265"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["266"],["264"],["265"],["264"],["265"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.",["267"],"React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["268"],["269"],"React Hook useEffect has missing dependencies: 'email' and 'resendConfirmCode'. Either include them or remove the dependency array.",["270"],["271"],"React Hook useEffect has missing dependencies: 'email' and 'history'. Either include them or remove the dependency array.",["272"],"React Hook useEffect has missing dependencies: 'email' and 'forgotPassword'. Either include them or remove the dependency array.",["273"],["274"],["275"],["276"],"React Hook useEffect has a missing dependency: 'getUserOrders'. Either include it or remove the dependency array.",["277"],"React Hook useEffect has a missing dependency: 'clearForm'. Either include it or remove the dependency array.",["278"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'addToBasket', 'book', and 'error'. Either include them or remove the dependency array.",["279"],"React Hook useEffect has missing dependencies: 'addToBasket', 'error', and 'state'. Either include them or remove the dependency array.",["280"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["281"],"'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"284","fix":"288"},{"desc":"289","fix":"290"},{"desc":"284","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"284","fix":"298"},{"desc":"284","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},"Update the dependencies array to be: [history, isLogged, logoutSuccess]",{"range":"310","text":"311"},"Update the dependencies array to be: [clearErrors]",{"range":"312","text":"313"},"Update the dependencies array to be: [history, registerSuccess, user]",{"range":"314","text":"315"},{"range":"316","text":"313"},"Update the dependencies array to be: [email, errors, isSubmitting, resendConfirmCode]",{"range":"317","text":"318"},{"range":"319","text":"313"},"Update the dependencies array to be: [email, history, resendCode]",{"range":"320","text":"321"},"Update the dependencies array to be: [email, errors, forgotPassword, isSubmitting]",{"range":"322","text":"323"},"Update the dependencies array to be: [email, forgotPasswordSuccess, history]",{"range":"324","text":"325"},{"range":"326","text":"313"},{"range":"327","text":"313"},"Update the dependencies array to be: [getUserOrders, user]",{"range":"328","text":"329"},"Update the dependencies array to be: [clearForm, createAuthorSuccess]",{"range":"330","text":"331"},"Update the dependencies array to be: [addToBasket, book, error, isSubmitting]",{"range":"332","text":"333"},"Update the dependencies array to be: [addToBasket, error, isSubmitting, state]",{"range":"334","text":"335"},"Update the dependencies array to be: [clearForm]",{"range":"336","text":"337"},[747,772],"[history, isLogged, logoutSuccess]",[1861,1863],"[clearErrors]",[2191,2208],"[history, registerSuccess, user]",[1472,1474],[1148,1170],"[email, errors, isSubmitting, resendConfirmCode]",[1218,1220],[1318,1330],"[email, history, resendCode]",[1126,1148],"[email, errors, forgotPassword, isSubmitting]",[1262,1285],"[email, forgotPasswordSuccess, history]",[1333,1335],[1700,1702],[578,584],"[getUserOrders, user]",[2426,2447],"[clearForm, createAuthorSuccess]",[1423,1437],"[addToBasket, book, error, isSubmitting]",[1435,1449],"[addToBasket, error, isSubmitting, state]",[1004,1006],"[clearForm]"]